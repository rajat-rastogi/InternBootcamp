//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

using namespace concurrency;

namespace com { namespace microsoft { namespace Sample { namespace AllJoynCar {

ref class AllJoynCarConsumer;

public ref class AllJoynCarDriveResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static AllJoynCarDriveResult^ CreateSuccessResult()
    {
        auto result = ref new AllJoynCarDriveResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static AllJoynCarDriveResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AllJoynCarDriveResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class AllJoynCarJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property AllJoynCarConsumer^ Consumer
    {
        AllJoynCarConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ AllJoynCarConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    AllJoynCarConsumer^ m_consumer;
};

public ref class AllJoynCarGetSpeedResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 Speed
    {
        uint32 get() { return m_value; }
    internal:
        void set(_In_ uint32 value) { m_value = value; }
    }

    static AllJoynCarGetSpeedResult^ CreateSuccessResult(_In_ uint32 value)
    {
        auto result = ref new AllJoynCarGetSpeedResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Speed = value;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }

    static AllJoynCarGetSpeedResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AllJoynCarGetSpeedResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    uint32 m_value;
};

public ref class AllJoynCarSetSpeedResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static AllJoynCarSetSpeedResult^ CreateSuccessResult()
    {
        auto result = ref new AllJoynCarSetSpeedResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }

    static AllJoynCarSetSpeedResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AllJoynCarSetSpeedResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class AllJoynCarGetStateResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property AllJoynCarState^ State
    {
        AllJoynCarState^ get() { return m_value; }
    internal:
        void set(_In_ AllJoynCarState^ value) { m_value = value; }
    }

    static AllJoynCarGetStateResult^ CreateSuccessResult(_In_ AllJoynCarState^ value)
    {
        auto result = ref new AllJoynCarGetStateResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->State = value;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }

    static AllJoynCarGetStateResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new AllJoynCarGetStateResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    AllJoynCarState^ m_value;
};

} } } } 
